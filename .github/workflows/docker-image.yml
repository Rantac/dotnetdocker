name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      working-directory: testingweb
     # run: docker build . -t dotnetdocker1.azurecr.io/dotnetdocker:latest
      run: docker build . -t myappcontainer.azurecr.io/dotnetdocker:latest


    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    
    - uses: actions/checkout@v4
    - name: Image Push to ACR
      #run: docker push dotnetdocker1.azurecr.io/dotnetdocker:latest
      run: docker push myappcontainer.azurecr.io/dotnetdocker:latest
      
  #deploy to ec2 server over ssh
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Pull the image to VM
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
           echo ${{ secrets.ACR_PASSWORD }} | sudo docker login ${{ secrets.AZURE_URL }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
           sudo docker pull myappcontainer.azurecr.io/dotnetdocker:latest
           sudo docker stop dotnetdocker || true
           sudo docker rm dotnetdocker || true
           sudo docker run -d -p 80:5000`` --name dotnetdocker myappcontainer.azurecr.io/dotnetdocker:latest
        #docker login ${{ secrets.AZURE_URL }} -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}   
           




    # push docker image to Docker Hub
    # - name: Log into Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Push the image to Docker Hub
    #   run: docker push kindayin12/dotnetdocker:latest
  
  # deploy to ec2 server over ssh
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Pull the image to VM
  #     uses: appleboy/ssh-action@v0.1.6
  #     with:
  #       host: ${{ secrets.SSH_HOST }}
  #       username: ${{ secrets.SSH_USERNAME }}
  #       password: ${{ secrets.SSH_PASSWORD }}
  #       script: |
  #         sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dotnetdocker:latest
  #         sudo docker stop dotnetdocker || true
  #         sudo docker rm dotnetdocker || true
  #         sudo docker run -d -p 80:5000`` --name dotnetdocker ${{ secrets.DOCKERHUB_USERNAME }}/dotnetdocker:latest

